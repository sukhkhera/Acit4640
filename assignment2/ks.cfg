# System authorization information
auth --enableshadow --passalgo=sha512
url --url=http://192.168.230.200/centos
repo --name=local --baseurl=http://192.168.230.200/centos
# Use graphical install
text
# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --only-use=sda
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

reboot

# Network information
network  --bootproto=static --device=enp0s3 --ip=192.168.230.10 --netmask=255.255.255.0 --gateway=192.168.230.1 --nameserver=8.8.8.8 --onboot=true --activate
network  --hostname=todo4640.bcit.local

firewall --enabled --http

# Root password
rootpw --iscrypted $6$MDyAAGNWYWsD7d8.$PYU8ZyvKlnDKPD/J7/yw8ilPhL50G9Tlh0SE1CPp8YIS6aBojZEgdkfoHygEkhdZhNlJiApMIL63kX.7TS4wy/
# System services
services --disabled="chronyd"
# System timezone
timezone America/Vancouver --isUtc --nontp
user --groups=wheel --name=admin --password=$6$qi.8HqVmXNXkT65m$ri4f6Yi506IafywzPDKlY31ce94sIZ9HnOmQG7akP9hmctqi5WErvc3ba0Mb7bhtk0ThQtuDDczsZzb5Ic4Zt/ --iscrypted --gecos="admin user"
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda
autopart --type=lvm
# Partition clearing information
clearpart --all

%packages
@core
kexec-tools
%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end

%post
yum -y install epel-release

ADMIN_USER="admin"
TODOAPP_USER="todoapp"
CONFIG_DIR="/home/todoapp/app/config"
NGINX_DIR="/etc/nginx"
SERVICE_DIR="/etc/systemd/system"
DATABASE_FILE="/home/admin/database.js"
NGINX_FILE="/home/admin/nginx.conf"
SERVICE_FILE="/home/admin/todoapp.service"
SSH_FILE="/home/admin/acit_admin_id_rsa.pub"
SSH_FOLDER="/home/admin/.ssh"
AUTHORIZED_FILE="/home/admin/authorized_keys"


#CREATING USERS
create_users() {
    sudo useradd -p $(openssl passwd -1 P@ssw0rd) "$ADMIN_USER"
	sudo useradd -p $(openssl passwd -1 P@ssw0rd) "$TODOAPP_USER"
	sudo usermod -a -G wheel "$ADMIN_USER"
}

#INSTALLING MODULES ON VM
install() {
    sudo yum -y install git
    sudo yum -y install npm
    sudo yum -y install nodejs
    sudo yum -y install mongodb-server
    sudo yum -y install nginx
    sudo systemctl enable mongod
    sed -r -i 's/^(%wheel\s+ALL=\(ALL\)\s+)(ALL)$/\1NOPASSWD: ALL/' /etc/sudoers
}

#FIREWALL SETTINGS TO ALLOW SSH AND HTTP ACCESS
firewall() {
    sudo firewall-cmd --zone=public --add-port=80/tcp
    sudo firewall-cmd --zone=public --add-port=8080/tcp --permanent
    sudo firewall-cmd --zone=public --add-service=https
    sudo firewall-cmd --zone=public --add-service=ssh
    sudo firewall-cmd --zone=public --add-service=http 
}

#CURLING FILES FROM THE PXE SERVER /var/www/lighttpd/files location
curl_pxe_files() {
    # sudo chmod 777 /home/admin
    cd /home/admin
	curl -O http://192.168.230.200/files/database.js
	curl -O http://192.168.230.200/files/nginx.conf
	curl -O http://192.168.230.200/files/todoapp.service
    curl -O http://192.168.230.200/files/acit_admin_id_rsa.pub
    curl -O http://192.168.230.200/files/authorized_keys

    sudo chmod 600 "$SSH_FILE"
    sudo chmod 644 "$AUTHORIZED_FILE"
    sudo chown admin "$SSH_FILE"
    sudo chown admin "$AUTHORIZED_FILE"

    setenforce 0
    sudo sed -r -i 's/SELINUX=(enforcing|disabled)/SELINUX=permissive/' /etc/selinux/config
}


#SETTING UP THE TODOAPP DIRECTORY AND CLONING GIT
setup() {
    sudo mkdir /home/todoapp/app
    sudo mkdir /home/admin/.ssh
    sudo chmod 700 /home/admin/.ssh
    sudo chown admin /home/admin/.ssh
    sudo chmod 755 /home/todoapp
    sudo chmod 777 /home/todoapp/app
    git clone https://github.com/timoguic/ACIT4640-todo-app.git /home/todoapp/app
    cd /home/todoapp
    sudo chown todoapp app
    cd /home/todoapp/app
    npm install
}

#COPYING THE CURLED FILES TO THE ACTUAL DIRECTORIES
copy_files() {
    sudo cp -f "$DATABASE_FILE" "$CONFIG_DIR"
    sudo cp -f "$NGINX_FILE" "$NGINX_DIR"
    sudo cp -f "$SERVICE_FILE" "$SERVICE_DIR"
    sudo cp -f "$SSH_FILE" "$SSH_FOLDER"
    sudo cp -f "$AUTHORIZED_FILE" "$SSH_FOLDER"
}

#STARTING SERVICES
start_services(){
    sudo systemctl enable nginx
    # sudo systemctl daemon-reload
    sudo systemctl enable todoapp
    sudo killall node
}

create_users
install
firewall
curl_pxe_files
setup
copy_files
start_services
%end
